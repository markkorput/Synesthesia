// Generated by CoffeeScript 1.6.3
(function() {
  var OrientCmsItemView, OrientCmsView, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.OrientCms = (function() {
    function OrientCms(opts) {
      this.options = opts || {};
      this.view = new OrientCmsView({
        collection: opts.clients
      });
      document.body.appendChild(this.view.el);
    }

    return OrientCms;

  })();

  OrientCmsView = (function(_super) {
    __extends(OrientCmsView, _super);

    function OrientCmsView() {
      _ref = OrientCmsView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    OrientCmsView.prototype.tagName = 'div';

    OrientCmsView.prototype.className = 'orient-cms-view';

    OrientCmsView.prototype.initialize = function() {
      var _this = this;
      if (this.collection) {
        this.collection.each(function(model) {
          return _this._addItemView(model);
        });
        return this.collection.on('add', function(model) {
          return _this._addItemView(model);
        });
      }
    };

    OrientCmsView.prototype._addItemView = function(model) {
      var view;
      view = new OrientCmsItemView({
        model: model
      });
      model.cmsView = view;
      return this.$el.append(view.el);
    };

    return OrientCmsView;

  })(Backbone.View);

  OrientCmsItemView = (function(_super) {
    __extends(OrientCmsItemView, _super);

    function OrientCmsItemView() {
      _ref1 = OrientCmsItemView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    OrientCmsItemView.prototype.tagName = 'div';

    OrientCmsItemView.prototype.className = 'orient-cms-item-view';

    OrientCmsItemView.prototype.initialize = function() {
      this.$el.append('<p id="orientation"></p>');
      this.$el.append('<p id="position"></p>');
      this.updateValues();
      if (this.model) {
        return this.model.on('change', this.updateValues, this);
      }
    };

    OrientCmsItemView.prototype.updateValues = function() {
      if (!this.model) {
        return;
      }
      this.$el.find('p#orientation').text('Orientation: ' + _.map(this.model.get('orientation').toArray(), function(str) {
        return str.toString().substring(0, 5);
      }).join(', '));
      return this.$el.find('p#position').text('Position: ' + _.map(this.model.get('position').toArray(), function(str) {
        return str.toString().substring(0, 5);
      }).join(', '));
    };

    return OrientCmsItemView;

  })(Backbone.View);

}).call(this);
